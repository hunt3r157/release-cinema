name: Release Cinema

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  pull-requests: write

jobs:
  trailer:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: linkedin-dark
            preset: linkedin
            theme: default
          - name: twitter-neon
            preset: twitter
            theme: neon
          - name: instagram-light
            preset: instagram
            theme: light

    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - uses: actions/setup-node@v4
        with: { node-version: 20 }

      - name: Install system deps (ImageMagick, ffmpeg, fonts)
        run: |
          sudo apt-get update
          sudo apt-get install -y imagemagick ffmpeg fonts-dejavu-core
          convert -version
          ffmpeg -version

      # PR: render exact base..head range
      - name: Render trailer (PR) â€” ${{ matrix.name }}
        if: ${{ github.event_name == 'pull_request' }}
        env:
          FROM_SHA: ${{ github.event.pull_request.base.sha }}
          TO_SHA:   ${{ github.event.pull_request.head.sha }}
        run: |
          mkdir -p assets/${{ matrix.name }}
          node bin/release-cinema.mjs render \
            --from "$FROM_SHA" --to "$TO_SHA" \
            --preset "${{ matrix.preset }}" \
            --theme "${{ matrix.theme }}" \
            --brand ./brand/logo.png \
            --brand-opacity 0.9 \
            --brand-geom +32+32 \
            --watermark "${GITHUB_REPOSITORY}" \
            --watermark-pt 20 \
            --watermark-geom +32+32 \
            --out-dir assets/${{ matrix.name }}

          mv assets/${{ matrix.name }}/trailer.gif assets/trailer-${{ matrix.name }}.gif
          mv assets/${{ matrix.name }}/trailer.mp4 assets/trailer-${{ matrix.name }}.mp4

      # Tags: render auto (last tag..HEAD)
      - name: Render trailer (tag) â€” ${{ matrix.name }}
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
          mkdir -p assets/${{ matrix.name }}
          node bin/release-cinema.mjs render \
            --auto \
            --preset "${{ matrix.preset }}" \
            --theme "${{ matrix.theme }}" \
            --brand ./brand/logo.png \
            --brand-opacity 0.9 \
            --brand-geom +32+32 \
            --watermark "${GITHUB_REPOSITORY}" \
            --watermark-pt 20 \
            --watermark-geom +32+32 \
            --out-dir assets/${{ matrix.name }}

          mv assets/${{ matrix.name }}/trailer.gif assets/trailer-${{ matrix.name }}.gif
          mv assets/${{ matrix.name }}/trailer.mp4 assets/trailer-${{ matrix.name }}.mp4

      - name: Upload artifact (this variant)
        uses: actions/upload-artifact@v4
        with:
          name: trailer-${{ matrix.name }}     # unique per matrix
          path: |
            assets/trailer-${{ matrix.name }}.gif
            assets/trailer-${{ matrix.name }}.mp4
          if-no-files-found: error
          overwrite: true

      - name: Add Action Summary preview (this variant)
        if: always()
        run: |
          echo "### ðŸŽ¬ ${{ matrix.name }}" >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"
          echo '<img alt="${{ matrix.name }}" src="data:image/gif;base64,' >> "$GITHUB_STEP_SUMMARY"
          base64 -w 0 assets/trailer-${{ matrix.name }}.gif >> "$GITHUB_STEP_SUMMARY" || true
          echo '"/>' >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"

      - name: Comment on PR with links
        if: ${{ github.event_name == 'pull_request' && matrix.name == 'linkedin-dark' }}
        uses: actions/github-script@v7
        with:
          script: |
            const runId = process.env.GITHUB_RUN_ID;
            const url = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${runId}`;
            const body = [
              'ðŸŽ¬ **Release Cinema previews**',
              '',
              `â€¢ Artifacts & inline previews (Summary): ${url}`,
              '',
              '- Variants:',
              '  - linkedin-dark (default)',
              '  - twitter-neon',
              '  - instagram-light',
            ].join('\n');
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body
            });

  # Separate job to gather all artifacts and attach on tag builds
  release_upload:
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    needs: trailer
    runs-on: ubuntu-latest
    steps:
      - name: Download all trailer artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: trailer-*
          path: assets
          merge-multiple: true

      - name: Attach all variants to Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            assets/trailer-*.gif
            assets/trailer-*.mp4
